# Cloud Build設定ファイル - AI人狼オンライン

steps:
  # バックエンドのDockerイメージをビルド
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/werewolf-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/werewolf-backend:latest'
      - '-f'
      - 'backend/Dockerfile.cloudrun'
      - './backend'
    waitFor: ['-']

  # フロントエンドのDockerイメージをビルド
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/werewolf-frontend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/werewolf-frontend:latest'
      - '-f'
      - 'frontend/Dockerfile.cloudrun'
      - '--build-arg'
      - 'VITE_API_BASE_URL=https://werewolf-backend-483231515533.asia-northeast1.run.app/api'
      - './frontend'
    waitFor: ['-']

  # バックエンドイメージをContainer Registryにプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/werewolf-backend:$COMMIT_SHA'
    waitFor: ['build-backend']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend-latest'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/werewolf-backend:latest'
    waitFor: ['build-backend']

  # フロントエンドイメージをContainer Registryにプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/werewolf-frontend:$COMMIT_SHA'
    waitFor: ['build-frontend']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend-latest'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/werewolf-frontend:latest'
    waitFor: ['build-frontend']

  # バックエンドをCloud Runにデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'werewolf-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/werewolf-backend:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
      - '--port'
      - '8080'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID,GOOGLE_CLOUD_REGION=asia-northeast1,ENVIRONMENT=production'
    waitFor: ['push-backend']

  # フロントエンドをCloud Runにデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'werewolf-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/werewolf-frontend:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--concurrency'
      - '100'
      - '--timeout'
      - '60'
      - '--port'
      - '8080'
    waitFor: ['push-frontend', 'deploy-backend']

  # デプロイ後の情報取得
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-info'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "=== デプロイ完了 ==="
        echo "Backend URL: $(gcloud run services describe werewolf-backend --region=asia-northeast1 --format='value(status.url)')"
        echo "Frontend URL: $(gcloud run services describe werewolf-frontend --region=asia-northeast1 --format='value(status.url)')"
        echo "API Docs: $(gcloud run services describe werewolf-backend --region=asia-northeast1 --format='value(status.url)')/docs"
    waitFor: ['deploy-frontend']

# 代替変数の設定
substitutions:
  _BACKEND_HASH: 'unknown'

# ビルド設定
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# タイムアウト設定
timeout: '1200s'

# タグ設定
tags:
  - 'werewolf-game'
  - 'cloud-run'
  - 'production'